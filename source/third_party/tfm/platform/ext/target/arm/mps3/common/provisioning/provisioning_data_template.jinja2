/*
 * Copyright (c) 2023, Arm Limited. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 */

#include "provisioning_bundle.h"
#include "psa/crypto.h"
#include "config_tfm.h"

/* This file is generated by the create_provisioning_data.py */

const struct provisioning_data_t data = {
    .bl2_assembly_and_test_prov_data = {
        /* bl2 rotpk 0 */
        {
            {{bl2_rotpk_0 | indent(12)}}
        },
        /* bl2 rotpk 1 */
        {
            {{bl2_rotpk_1 | indent(12)}}
        },
#if (MCUBOOT_IMAGE_NUMBER > 2)
        /* bl2 rotpk 2 */
        {
            {{bl2_rotpk_2 | indent(12)}}
        },
#endif /* MCUBOOT_IMAGE_NUMBER > 2 */
#if (MCUBOOT_IMAGE_NUMBER > 3)
        /* bl2 rotpk 3 */
        {
            {{bl2_rotpk_3 | indent(12)}}
        },
#endif /* MCUBOOT_IMAGE_NUMBER > 3 */
    },
#ifdef PLATFORM_PSA_ADAC_SECURE_DEBUG
        {
            {{secure_debug_pk | indent(12)}}
        },
#endif /* PLATFORM_PSA_ADAC_SECURE_DEBUG */
    .assembly_and_test_prov_data = {
        /* HUK */
        {
            {{huk | indent(12)}}
        },
    },
    .psa_rot_prov_data = {
        /* IAK */
        {
            {{iak | indent(12)}}
        },
        /* IAK len */
        {{iak_len | indent(8)}},
#ifdef SYMMETRIC_INITIAL_ATTESTATION
        /* IAK type */
        PSA_ALG_HMAC(PSA_ALG_SHA_256),
#else
        /* IAK type */
        PSA_ECC_FAMILY_SECP_R1,
#endif /* SYMMETRIC_INITIAL_ATTESTATION */
#if ATTEST_INCLUDE_COSE_KEY_ID
        /* IAK id */
        "kid@trustedfirmware.example",
#endif /* ATTEST_INCLUDE_COSE_KEY_ID */
        /* boot seed */
        {
            {{boot_seed | indent(12)}}
        },
        /* implementation id */
        {
            {{implementation_id | indent(12)}}
        },
        /* certification reference */
        "{{certification_reference | indent(12)}}",
        /* verification_service_url */
        "{{verification_service_url | indent(12)}}",
        /* attestation_profile_definition */
        #if ATTEST_TOKEN_PROFILE_PSA_IOT_1
        "PSA_IOT_PROFILE_1",
#elif ATTEST_TOKEN_PROFILE_PSA_2_0_0
        "http://arm.com/psa/2.0.0",
#elif ATTEST_TOKEN_PROFILE_ARM_CCA
        "http://arm.com/CCA-SSD/1.0.0",
#else
#ifdef TFM_PARTITION_INITIAL_ATTESTATION
#error "Attestation token profile is incorrect"
#else
        "UNDEFINED",
#endif /* TFM_PARTITION_INITIAL_ATTESTATION */
#endif
        /* Entropy seed */
        {
            {{entropy_seed | indent(12)}}
        },
    }
};
